apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {

    namespace("com.telegramstickers.catalogue")

    sourceSets {
//        main.res.srcDirs += 'src/main/res-drawer'
//        main.res.srcDirs += 'src/main/res-tv'
//        main.res.srcDirs += 'src/main/res-android-tv'
    }

    compileSdk 34
    buildToolsVersion '34.0.0'


    buildFeatures {
        viewBinding true
        //dataBinding true
    }


    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
//        Properties versionProps = new Properties()
//        versionProps.load(new FileInputStream(versionPropsFile))
//        def code = versionProps['VERSION_CODE'].toInteger() + 1
//        versionProps['VERSION_CODE'] = code.toString()
//        versionProps.store(versionPropsFile.newWriter(), null)
        def code = versionCodeDate()

        defaultConfig {
//            vectorDrawables.useSupportLibrary = true
            resConfigs "en", "es", "fr", "de", "it", "pt", "el", "ru", "ja", "zh-rCN", "zh-rTW", "ko", "ar", "uk"

            //Disable because chronometr not support xml
//            vectorDrawables {
//                useSupportLibrary = true
//            }
            multiDexEnabled true
            vectorDrawables {
                useSupportLibrary = true
            }
            applicationId "com.telegramstickers.catalogue"
            minSdkVersion rootProject.minSdkVersion
            targetSdkVersion rootProject.targetSdkVersion
            versionCode code
            versionName "1.4." + code
            setProperty("archivesBaseName", "TelegramstickersCatalogue")
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    signingConfigs {

        debug {
            keyAlias 'release'
            keyPassword 'release'
            storeFile file('keystore/keystore.jks')
            storePassword 'release'
        }
        release {
            keyAlias 'release'
            keyPassword 'release'
            storeFile file('keystore/keystore.jks')
            storePassword 'release'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard-rules.pro"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //debuggable false
            //jniDebuggable false
            signingConfig signingConfigs.release
            versionNameSuffix ".release"
        }
        debug {
//            // to debug ProGuard rules
            multiDexEnabled true
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.pro'
            signingConfig signingConfigs.debug
            versionNameSuffix ".DEMO"
        }
    }
    productFlavors {}

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}
//==========
tasks.register("copyAabToBuildFolder", Copy) {
    println "mmmmmmmmmmmmmmmmm ${buildDir}/outputs/bundle/release"
    println "mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm"
    def outputDirectory = file("C:/build")
    if (!outputDirectory.exists()) {
        outputDirectory.mkdirs()
    }

    from("${buildDir}/outputs/bundle/release") {
        include("*.aab")
    }
    into(outputDirectory)
}

apply from: "C:\\scripts/copyReports.gradle"

//==========
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$rootProject.compatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.navigation:navigation-fragment:2.8.1'
    implementation 'androidx.navigation:navigation-ui:2.8.1'
    //implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //implementation 'com.facebook.android:facebook-android-sdk:14.1.0'
    //implementation 'com.facebook.android:facebook-login:14.1.0'

    implementation project(':features:ui')
    implementation project(':features:wads')
    implementation project(':lib')

    //implementation project(':features:ui')

    //implementation 'com.blunderer:materialdesignlibrary:1.1.1'
    //implementation 'com.blunderer:materialdesignlibrary:2.0.4'

    implementation "com.google.android.gms:play-services-ads:$rootProject.gmsAds"
    //Firebase Crashlytics
    implementation "com.google.firebase:firebase-crashlytics:$rootProject.crashlyticsVersion"
    implementation "com.google.firebase:firebase-analytics:$rootProject.analyticsVersion"
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    //3.12.12
    //3.14.9
    //OkHttp Expected Android API level 21+ but was 19
    //noinspection GradleDependency
    implementation("com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion") {
        //force = true //API 19 support
    }
    //noinspection GradleDependency
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'com.github.kenglxn.QRGen:android:3.0.1'

    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$rootProject.lifecycle_version"
    //implementation 'com.github.GrenderG:Toasty:1.5.2'
    implementation "com.github.alexvarboffin:mint-android-app:1.5.2"
    implementation 'com.airbnb.android:lottie:6.4.0'
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"
    implementation project(':threader')
    implementation project(path: ':features:permissionResolver')

    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"

    implementation 'nl.dionsegijn:konfetti-xml:2.0.4'
}

static def versionCodeDate() {
    return new Date().format("yyMMdd").toInteger()
}